{
	"info": {
		"_postman_id": "0a255a57-39d5-4f5a-9745-34cac453de20",
		"name": "toCairn",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Evaluations",
			"item": [
				{
					"name": "Get Evaluations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    var jsonData = pm.response.json();",
									"    if(jsonData.length != 0) {",
									"        pm.environment.set(\"id\", jsonData[0].id);",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/evaluation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"evaluation"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Evaluation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/evaluation/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"evaluation",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create MOEA Evaluation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"id\", jsonData.id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{   \n    \"name\": \"<<Name of this evaluation>>\",\n    \"solverConfiguration\": {\n        \"type\": \"moea\",\n        \"algorithm\": \"NSGA_II\",\n        \"maxEvaluations\": 10000,\n        \"encodingType\": \"<<CLUSTER_LABEL | GRAPH_ADJENCY>>\",\n        \"metrics\": [\n            \"DATA_AUTONOMY\", \n            \"FOCUSED_ON_ONE\",\n            \"BEHAVIORAL_AUTONOMY\",\n            \"SHARED_DEVELOPMENT_LIFECYCLE\",\n            \"DECOUPLED_COHESIVE\",\n            \"REUSABLE\",\n            \"LIMITED_COMMUNICATION_OVERHEAD\",\n            \"LIMITED_COMMUNICATION\"\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/evaluation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"evaluation"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Hierarchical Evaluation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"id\", jsonData.id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{   \n    \"name\": \"<<Name of this evaluation>>\",\n    \"solverConfiguration\": {\n        \"type\": \"hierarchical\",\n        \"weights\": [1,1,1,1,1,1,1,1,1,1],\n        \"metrics\": [\n            \"DATA_AUTONOMY\", \n            \"FOCUSED_ON_ONE\",\n            \"BEHAVIORAL_AUTONOMY\",\n            \"SHARED_DEVELOPMENT_LIFECYCLE\",\n            \"DECOUPLED_COHESIVE\",\n            \"REUSABLE\",\n            \"LIMITED_COMMUNICATION_OVERHEAD\",\n            \"LIMITED_COMMUNICATION\"\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/evaluation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"evaluation"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Evaluation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"id\", jsonData.id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{   \n    \"name\": \"<<New name of this evaluation>>\",\n    \"solverConfiguration\": {\n        \"type\": \"hierarchical\",\n        \"weights\": [1,1,1,1,1,1,1,1,1,1],\n        \"metrics\": [\n            \"DATA_AUTONOMY\", \n            \"FOCUSED_ON_ONE\",\n            \"BEHAVIORAL_AUTONOMY\",\n            \"SHARED_DEVELOPMENT_LIFECYCLE\",\n            \"DECOUPLED_COHESIVE\",\n            \"REUSABLE\",\n            \"LIMITED_COMMUNICATION_OVERHEAD\",\n            \"LIMITED_COMMUNICATION\"\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/evaluation/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"evaluation",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Run Evaluation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/evaluation/{{id}}/run",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"evaluation",
								"{{id}}",
								"run"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Evaluation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"    ",
									"    // Reset the ID in the environment",
									"    pm.environment.set(\"id\", \"\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/evaluation/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"evaluation",
								"{{id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "EvaluationInput",
			"item": [
				{
					"name": "Get Nodes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/evaluation/{{id}}/graph/nodes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"evaluation",
								"{{id}}",
								"graph",
								"nodes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Edges",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/evaluation/{{id}}/graph/edges",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"evaluation",
								"{{id}}",
								"graph",
								"edges"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "AnalysisInput",
			"item": [
				{
					"name": "Perform Source Analysis",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pathToProjectZip\": \"<<path-to-source-code.zip>>\",\n    \"pathToJaCoCoXml\": \"<<optional-path-to-jacoco.xml>>\",\n    \"languageLevel\": \"JAVA_11\",\n    \"fnqExcludeRegexes\": [\n        \"<<optional-list-of-applications-to-exclude>>\"\n    ],\n    \"dataClassFqnRegexes\": [\n        \"<<optional-list-of-classes-to-mark-as-data>>\"\n    ],\n    \"customDataAnnotation\": \"<<optional-annotation-used-in-application-on-data-classes>>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/evaluation/{{id}}/analysis/source",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"evaluation",
								"{{id}}",
								"analysis",
								"source"
							]
						}
					},
					"response": []
				},
				{
					"name": "Perform Dynamic Analysis",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pathToJfrFile\": \"<<path-to-recording.jfr>>\",\n    \"namespace\": \"<<start-of-top-level-package-to-analyse>>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/evaluation/{{id}}/analysis/dynamic",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"evaluation",
								"{{id}}",
								"analysis",
								"dynamic"
							]
						}
					},
					"response": []
				},
				{
					"name": "Perform Evolutionary Analysis",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pathToGitLog\": \"<<path-to-git-log.txt>>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/evaluation/{{id}}/analysis/evolutionary",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"evaluation",
								"{{id}}",
								"analysis",
								"evolutionary"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "EvaluationResult",
			"item": [
				{
					"name": "Get Solution",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/solution/{{solutionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"solution",
								"{{solutionId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Specific Result And Solutions Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"",
									"    var jsonData = pm.response.json();",
									"    if(jsonData.solutionIds.length != 0) {",
									"        pm.environment.set(\"solutionId\", jsonData.solutionIds[0]);",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/result/{{resultId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"result",
								"{{resultId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Results From Evaluation",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"",
									"    var jsonData = pm.response.json();",
									"    if(jsonData.length != 0) {",
									"        pm.environment.set(\"resultId\", jsonData[0].id);",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/evaluation/{{id}}/result",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"evaluation",
								"{{id}}",
								"result"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Specific Result",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/result/{{resultId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"result",
								"{{resultId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080"
		},
		{
			"key": "solutionId",
			"value": ""
		},
		{
			"key": "id",
			"value": ""
		},
		{
			"key": "resultId",
			"value": ""
		}
	]
}