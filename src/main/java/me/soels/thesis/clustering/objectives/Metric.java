package me.soels.thesis.clustering.objectives;

import me.soels.thesis.clustering.encoding.Clustering;
import me.soels.thesis.model.EvaluationInput;

/**
 * A metric measures how well a clustering performs in terms of (part of) a characteristic of the input data. This
 * defines a dimension into the optimization algorithm which determines a clustering structure relevant to this
 * characteristic. An objective represents a characteristics and objectives can have multiple metrics.
 * <p>
 * For example, the {@link ObjectiveType#ONE_PURPOSE} objective would represent how well this clustering is focused
 * on a single purpose through its coupling and cohesion metrics.
 * <p>
 * Note that the metrics that should be evaluated should be represented as a minimization problem. If it is not,
 * it should be negated.
 */
public interface Metric {
    /**
     * Calculate the metric value for the given clustering based on the given application input.
     * <p>
     * The clustering only contains the nodes that are combined together whereas the application input should
     * hold more information needed to determine the resulting metrics value.
     *
     * @param clustering      the decoded clustering as generated by the evolutionary algorithm
     * @param evaluationInput the input for the analysis containing the information required for this metric to
     *                        evaluate
     * @return the resulting value for this metric
     */
    double calculate(Clustering clustering, EvaluationInput evaluationInput);
}
